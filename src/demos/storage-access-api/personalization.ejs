document.addEventListener('DOMContentLoaded', () => {
    const baseURL = '<%= protocol %>://<%= domainC %><% if (isPortPresent) { %>:<%= port %><% } %>/personalization';
    const pageContainer = document.getElementById('theme-container');
    const themeSwitcher = document.getElementById('dark-mode-switch');
    const errorMessages = document.getElementById('status-message');
    
    async function updateUserPreference() {

        const hasStorageAccess = await document.hasStorageAccess();
        
        if ( hasStorageAccess ) {
            fetchAndApplyTheme();
        } else {
            try {
                await document.requestStorageAccess();
                fetchAndApplyTheme();
            } catch (error) {
                console.error('There has been a problem with your fetch operation:', error);
                errorMessages.textContent = `Error: ${error}`;
            }
        }   
    }

    function fetchAndApplyTheme() {
        fetch(`${baseURL}/get-personalization`, {
                method: 'GET',
                credentials: 'include'
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                        errorMessages.textContent = `Network response was not ok ${response.status} - ${response.statusText}`;
                    }
                    return response.json();
                })
                .then(data => {
                    const theme = data.theme;
                    if (theme === 'dark') {
                        pageContainer.classList.add('dark');
                        themeSwitcher.checked = true;
                    }
                })
                .catch(error => {
                    console.error('There has been a problem with your fetch operation:', error);
                    errorMessages.textContent = `Error: ${error}`;
                });
    }

    function fetchSetPersonalization() {
        fetch( `${baseURL}/set-personalization`, {
            method: 'POST',
            credentials: 'include',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ theme: themeSwitcher?.checked ? 'dark' : 'light' })
        })
        .then(response => response.json())
        .then(data => {
            pageContainer.classList.toggle('dark');
        });
    }

    async function toggleTheme() {
        const hasStorageAccess = await document.hasStorageAccess();
        if( hasStorageAccess ) {
            fetchSetPersonalization();
        } else {
            try {
                await document.requestStorageAccess();
                if ( await document.hasStorageAccess() ) {
                    fetchSetPersonalization();
                } else {
                    console.error('User denied storage access');
                    errorMessages.textContent = 'User denied storage access';
                }
            } catch (error) {
                console.error('Error:', error);
                console.log(error)
                errorMessages.textContent = `${error}`;
            }
        } 
    }
    
    window.toggleTheme = toggleTheme;
    // updateUserPreference();
});
